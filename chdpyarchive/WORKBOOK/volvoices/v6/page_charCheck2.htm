
<html>
<head>
<title>
page_ocr_
</title>
<link href="vv_workbook.css" type="text/css" rel="stylesheet">

<script language=javascript src="vv_decompose_tags.js"></script>

<script>





</script>


</head>

<script>document.write('<body   bgcolor="'+parent.adb_background_color+'" >');</script>

<font face="arial" size="3">
<center><font face="arial">

<h2> <script> document.write(parent.adb_project_name); </script>
 Workbook Character Check2 Page</h2>
<p>
<a href="http://diglib.lib.utk.edu/~cdeane/WORKBOOK/dataprep/d.htm" target="_blank">reference</a>
</center>

<script>

//global variables defined in vv_decompose_tags.js
///var xmlAll = new String();
///var xmlCursor = 0;
///var localCursor = 0;

function loadFile() {
//alert("begin file: "+document.forms[0].begin_file.value +"\nend file: "+document.forms[0].end_file.value);

for ( i=0;i<document.DF.dirSelect.length; i++) {
if ( document.DF.dirSelect[i].selected == true ) {
	document.DF.begin_file.value = document.DF.dirSelect[i].text;
	break;
	}
}//end for

}//end function

function loadDirName() {
if ( document.DF.dir_name0.value == "" ) {
        alert("Please enter a directory name");
	return;
	}
document.DF.dir_name1.value = document.DF.dir_name0.value;
}

function displayDirectoryContents() {

alert ("displayDirectoryContents()");


}


function getDirname() {
var str = new String(document.DF.dir_name1.value)
return(str);
}///end function

function clearData() {
document.forms[0].chomp.value = "";
document.forms[0].chomp2.value = "";
document.DF.reset();
return;
}

function char_2_int(){
var c = new String(document.forms[0].my_character.value);
var n = c.charCodeAt(0);
//alert (" c="+c+"\n n="+n);
document.forms[0].my_number.value=n;
}

function int_2_char(){
var n = new Number(document.forms[0].my_number.value);
var c = new String();
    c = "000"+n;
    c_index = c.length -3;
    c = c.substring(c_index);
    c = "&#"+c+";";
document.forms[0].my_character.value = c;
}

function int_2_hex() {

var n = new Number(document.forms[0].my_number.value);
document.forms[0].my_h_number.value="";
document.forms[0].my_h_code.value="";
var h = new String();
h = n.toString(16);
h = "0000"+h;
index = h.length - 4;
//alert("h="+h);
h = h.substring(index);
var h_code = new String();
h_code = "&#x"+h+";";
//alert("h="+h);
//alert("int_2_hex\n base 10: "+n+"\n base 16: "+h +"\n hexcode: "+h_code);
document.forms[0].my_h_number.value=h;
document.forms[0].my_h_code.value=h_code;
}

function show_the_char() {
if (document.forms[0].my_h_number.value == "" ) {
	alert("no character value to load.");
	return;
	}

document.all.show_char.innerHTML= '<font face="arial" size="4">'+document.forms[0].my_h_code.value+'</font>';
}


function filterChomp_01() {//all chars
var strChomp = new String(document.forms[0].chomp.value);
var numChars = 0;
	for (i=0;i<strChomp.length;i++){
	numChars++;
	if (!confirm("option 1: view each character in the string"
		+"\nstrChomp.charAt("+i+")="+strChomp.charAt(i)+"\nstrChomp.charCodeAt("+i+")="+strChomp.charCodeAt(i) ) ) {
		break;
		}
	}//end for
alert("option 1:\nThe number of out of characters reviewed: "+numChars);
}//end function

function filterChomp_02() {//out of range chars
var MSG = new String("");
var strChomp = new String(document.forms[0].chomp.value);
var numOutOfRange=0;
var ii = 0; 
var iii = 0;
var iiii = 0;
var iiiii = 0;
	for (i=0;i<strChomp.length;i++){
		if ( strChomp.charCodeAt(i) > 127 || strChomp.charCodeAt(i) < 9 ) {
			ii=i-4000;
			iii= i+4000; 
			iiii=i;
			iiiii=i+1;
			if (ii<0) ii=0;
			numOutOfRange++;
			MSG += "\n\noption 2: view each out of range character in the string"
			+"\nstrChomp.charAt("+i+")=>>"+strChomp.charAt(i)+"<<\nstrChomp.charCodeAt("+i+")="+strChomp.charCodeAt(i) 
			+"\n-----begin string--------------------------------------------------------------\n"
			+"\n"+strChomp.substring(ii,iiii)+"\n>>"+strChomp.charAt(i)+"<<\n"+strChomp.substring(iiiii,iii)
			+"\n-------end string--------------------------------------------------------------\n";
			if (!confirm("option 2: view each out of range character in the string"
			+"\nstrChomp.charAt("+i+")="+strChomp.charAt(i)+"\nstrChomp.charCodeAt("+i+")="+strChomp.charCodeAt(i) ) ) {
			break;
			}//end inner if
		}//end outer if
	}//end for
alert("option 2:\nThe number of out of out of range characters is: "+numOutOfRange
   + "\n\nThere are "+strChomp.length+" characters in this file.");

MSG+="\n\noption 2:\nThe number of out of out of range characters is: "+numOutOfRange
   + "\n\nThere are "+strChomp.length+" characters in this file.";
document.forms[0].msg.value=MSG;
}//end function

function filterChomp_03() {//test ---same as _01
var strChomp = new String(document.forms[0].chomp.value);
var numChars = 0;
	for (i=0;i<strChomp.length;i++){
	numChars++;
	if (!confirm("option 3: view each character in the string"
		+"\nstrChomp.charAt("+i+")="+strChomp.charAt(i)+"\nstrChomp.charCodeAt("+i+")="+strChomp.charCodeAt(i) ) ) {
		break;
		}
	}//end for
alert("option 3:\nThe number of out of characters reviewed: "+numChars);
}//end function

function filterChomp_04() {//dump every other character 16 bit encoding => 8 bit

//alert("filterChomp()");
var strChomp = new String(document.forms[0].chomp.value);
var strChomp2 = new String("z");
for (i=0;i<strChomp.length;i++){
	if ( i%2 == 0) strChomp2 += strChomp.charAt(i);
	}//end for

document.forms[0].chomp2.value = strChomp2.substr(1);//remove initial z 
}//end function filterChomp_04


function filterChomp_05() {//html chars => txt chars

//alert("filterChomp()");
var strChomp = new String(document.forms[0].chomp.value);
var strChomp2 = new String("z");
for (i=0;i<strChomp.length;i++){
	strChomp2 += strChomp.charAt(i);
	}//end for

document.forms[0].chomp2.value = strChomp2.substr(1);//remove initial z 
}//end function filterChomp_05

function filterChomp() {

//alert("filterChomp()");
var strChomp = new String(document.forms[0].chomp.value);

var strChomp2 = new String("z");
var numReplace = 0;
var numReplaceLow =0;
var numNotReplace =0;
var hexNum = new String();
for (i=0;i<strChomp.length;i++){

	if ( strChomp.charCodeAt(i) == 9 ) {
		strChomp2 += " ";//replace tab with space
		numReplaceLow++;
	//}else if ( strChomp.charCodeAt(i) == 10 ) {
		//strChomp2 += " ";//replace \n with space - keep unix linefeeds
		//numReplaceLow++;
	}else if ( strChomp.charCodeAt(i) == 12 ) {//what is 12 - form feed ^L 
		strChomp2 += " ";//replace formfeed with space
		numReplaceLow++;
	///}else if ( strChomp.charCodeAt(i) == 13 ) { 
		//strChomp2 += " ";//replace \r with space - keep ms cr
		//numReplaceLow++;

	//}else if ( strChomp.charCodeAt(i) == 174) {//save this as example
		//strChomp2 += "(R)";// replace R in circle symbol with character string (R)
		//numReplace++;
	}else if ( strChomp.charCodeAt(i) > 127) {
		I = strChomp.charCodeAt(i);
		hexNum = I.toString(16);
		hexNum = "0000"+hexNum;
		hn_index = hexNum.length -4;
		hexNum = hexNum.substring(hn_index);
		alert("strChomp.charAt(i)="+strChomp.charAt(i)+"\nstrChomp.charCodeAt(i)="
			+strChomp.charCodeAt(i) +"\n I="+I+"\n hexNum="+hexNum);
		strChomp2 += "&#x"+hexNum+";";
		numReplace++;
	}else{
		strChomp2 += strChomp.charAt(i);
	}
}//end for

        while (strChomp2.indexOf("  ") > -1 ) {
	strChomp2 = strChomp2.replace(/  /gi," ");//replace multiple whitespace with single whitespace
	}

	alert( "filterChomp()\n\nNumber of Replacements (ascii > 127 ) = "+numReplace
		+"\n\nNumber of Replacements ( ascii 9, 10, 12, 13 ) ="+numReplaceLow
		+"\n\nNumber not able to replace = "+numNotReplace);
document.forms[0].chomp2.value = strChomp2.substr(1);//remove initial z 
}//end function



function save_ocr() {

document.DF.action = "saveOCR.php";
document.DF.method = "POST";
///////////document.DF.myfilename.value = document.DF.begin_file.value;
document.DF.submit();

}//end function

</script>

<form name="DF"  xaction="saveOCR.php" xmethod="POST">


<!---table border="1" cellpadding="2" cellspacing="0" width="98%" bgcolor="ddeeff"--->
<table  class="bgINNER"  border="0" cellpadding="2" cellspacing="1" width="98%" xbgcolor="99aabb">


<tr class="greenrow"><td colspan="3" >&nbsp;</td></tr>


<tr class="bgstandard" ><td colspan="1" class="label12u">
begin_file<br>data
</td><td class="value10nou">
<textarea name="chomp" rows="6" cols="80" value=""></textarea> document.DF.chomp.value
<br>
&nbsp;
<input type="button" name ="bChomp1top" onclick="filterChomp_01();" value="test all chars top">
&nbsp;
&nbsp;
<input type="button" name ="bCleartop" onclick="clearData();" value="Clear TextAreas top">
&nbsp;
<input type="button" style="width:180px;" name ="bChomp1top" onclick="filterChomp_02();" value="show only out-of-range chars top">
<!---
<input type="button" name ="int2char" onclick="int_2_char();" value="int to char">
<input type="text" name="my_character" value="" size="5">
<input type="text" name="my_number" value="" size="5">
<input type="button" name ="char2int" onclick="char_2_int();" value="char to int">
<input type="text" name="my_h_number" value="" size="5">
<input type="text" name="my_h_code" value="" size="5">
<input type="button" name ="int2hex" onclick="int_2_hex();" value="int to hex">
<br> 
<input type="button" name ="b_show_char" onclick="show_the_char();" value="Show Char">

<div id="show_char"><font face="arial" size="3">xxx</font></div>
--->
&nbsp;
&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr class="greenrow"><td colspan="3" >&nbsp;</td></tr>

<tr class="bgstandard" ><td colspan="1" class="label12u">
end_file<br>data
</td><td class="value10nou">
<!-- textarea: document.DF.chomp.value<br-->
<textarea name="chomp2"
rows="2" cols="80"></textarea> document.DF.chomp2.value
<p>
Save file as: <input type="text" size="50" name="myfilename" value="MYFILE.txt">
<br>Please use .txt file extension.
<p>
message: <textarea rows="6" cols="80" name="msg"></textarea>

&nbsp;</td>

<td>&nbsp;</td>
</tr>
<tr class="greenrow"><td colspan="3" >&nbsp;</td></tr>




<tr class="bgstandard" ><td colspan="3" align="left">
&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;

<input type="button" name ="bChomp0" onclick="filterChomp(0);" value="Clean Up Text">
&nbsp;
&nbsp;
<input type="button" name ="bChomp1" onclick="filterChomp_01();" value="test all chars">
&nbsp;
&nbsp;
<input type="button" style="width:180px;" name ="bChomp1" onclick="filterChomp_02();" value="show only out-of-range chars">
&nbsp;
&nbsp;
<!--
<input type="button" name ="bChomp1" onclick="filterChomp_03();" value="test chars">
&nbsp;
&nbsp;
-->
<input type="button" name ="bChompQ" onclick="filterChomp_04();" value="dump extra chars">
&nbsp;
&nbsp;
<input type="button" name ="bChompQ" onclick="filterChomp_05();" value="html copy">
&nbsp;
&nbsp;
<br>
&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
<input type="button" name ="bChompR" onclick="save_ocr();" value="save file">
&nbsp;
&nbsp;
<input type="button" name ="bClear" onclick="clearData();" value="Clear TextAreas">
&nbsp;
&nbsp;
&nbsp;


</td></tr>


<tr class="bgstandard" >
<td>&nbsp</td><td>&nbsp</td><td>&nbsp</td>
</tr>

<tr class="greenrow"><td colspan="3" >&nbsp;</td></tr>

</table>

</form name="forms[0]">

</body>
</html>

