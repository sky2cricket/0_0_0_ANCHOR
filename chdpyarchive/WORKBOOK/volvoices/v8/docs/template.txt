
function addOneSubjectBlock() {
if (!confirm("You have chosen to add one Subject Block.\n\nDo you wish to continue?")){return;}
buildModsTags(11);
parent.L.update_block_iteration("subject","1");
parent.D.location.replace("page_012_subject.htm");
}//end function


function subtractOneSubjectBlock() {
var N = new Number( parent.L.get_block_iteration("subject"));
if (N==1) {
        alert("Subject Block #1 may not be removed.");
        return;
        }
if (!confirm("You have chosen to remove one Subject Block.\n\nDo you wish to continue?")){return;}
parent.L.update_block_iteration("subject","-1");
parent.D.location.replace("page_012_subject.htm");
}//end function

///this is the limit on the loop to write form blocks
var numSubBlocks = new Number( parent.L.get_block_iteration("subject"));

///buttons for add/subtract

<tr class="greenrow"><td colspan="5" >&nbsp;</td></tr>
<tr class="bgstandard">
<td class="label13u">Add or Remove<br>One Identifier</td><td colspan="4">&nbsp;
<input type="button" name="AddOneIdBlock" 
value="Add One Identifier" class="buttonnw" onClick="addOneIdentifierBlock();">
<input type="button" name="SubtractOneIdBlock" 
value="Remove One Identifier" class="buttonnw" onClick="subtractOneIdentifierBlock();">
</td><td>&nbsp;</td>
</tr>


function buildModsTags...

//function populate_DF_blocklist_from_DF_webform(block_list_name,filter_str ) {
document.DF.subject_block_list.value = parent.L.populate_DF_blocklist_from_DF_webform("subject_block_list","subject_");

var num = new Number();
    num = N;
if (num == 11) {return;} //no validation required.

///////////////////////////////////////////////////////////////////////////////////////////


<tr class="greenrow"> <td height="08" colspan="3"></td></tr>
/* vv_dyn_functions.js
function update_page_validation(str_pagename,alpha) {
function get_page_validation(str_pagename) {
function update_block_iteration(str_blockname, iteration_amount) {
function get_block_iteration(str_blockname) {
function returnElementIndex(n,str) {
function populate_DF_webform_from_UF_blocklist(block_list_name,filter_str){
function populate_DF_blocklist_from_DF_webform(block_list_name,filter_str ) {
function populate_UF_blocklilst_from_DF_blocklist(block_list_name) {
*/

from vv_compose_tags.js


//=================================================================
//=================================================================
//aps = buildTagsArray_relatedItem(num);
///returns the ps array
function buildTagsArray_relatedItem(N){

//do not build empty tags for relatedItem
if (get_page_validation("relatedItem") == "k"){
	return;
	}

set_output_option(N);

var ps=new Array();

///ps[ps.length] = new String("< -- page_05_dev -- >");

/////////BEGIN PAGE <relatedItem> 
/////////////////////////////////////////////////////header xml version="1.0"
///document.write('<?xml version="1.0"  ?>\r\n');

//var brtag = new String("&lt;br>");
//if (N==0) {brtag="\r\n";}

var str = new String(parent.U.document.UF.ri_block_list.value);
var Ari = new Array();
    Ari = str.split(parent.U.split_token);

/*
for (i=0;i<Ari.length;i++){
	alert("Ari["+i+"]="+Ari[i]);
	}
*/

var numRI = get_block_iteration("relatedItem");
var attr_dlab = new String(""); //attribute displayLabel
var attr_type = new String(""); //attribute type
var attr_url = new String(""); //attribute xlink:href
var dlab = new String(""); //attribute displayLabel
var type = new String(""); //attribute type
var url = new String(""); //attribute xlink:href
var end = new String(""); //end of ri block
var m = 0; //counter for Ari array

for (i=0;i<numRI;i++) {
attr_dlab="";
dlab = Ari[m++];
//alert("dlab="+dlab);
	if ( dlab != "" && dlab != "empty_string" ) {
	attr_dlab = ' displayLabel="'+dlab+'"';
	}
attr_type="";
type = Ari[m++];
//alert("type="+type);
	if ( type != "none" && type != "empty_string" ) {
	attr_type = ' type="'+type+'"';
	}

attr_url="";
url  = Ari[m++];
//alert("url="+url);
	if ( url != "" ) {
        attr_url = ' xlink:href="'+bfont+url+efont+'"';
	}
end = Ari[m++];
//alert("end="+end);
	
ps[ps.length]= new String(obrak+'mods:relatedItem'+attr_dlab+attr_type+attr_url+' />\r\n');/////+obrak+'/mods:relatedItem>\r\n');

}//end for

return(ps);

}//end function buildTagsArray_relatedItem(N)

----------
type
abbreviated - needs authority
translated - should not have auth
alternative - should not have auth
uniform - needs authority


authority

type="uniform" uses 6
ref 6
http://www.loc.gov/marc/sourcecode/authorityfile/authorityfilesource.html
Source Codes for Name and Title Authority Files

naf -- NACO authority file. 
sanb -- South African national bibliography authority file. 

type="abbrevriated" uses 7
Ref 7
http://www.loc.gov/marc/relators/relaothr.html#rela210b
FIELD 210 (Abbreviated Title)
dnlm 
National Library of Medicine Locatorplus (Bethesda, MD: National Library of Medicine) 
hlasja 
HLAS journal abbreviations (Washington, DC: Library of Congress, Hispanic Division, Handbook of Latin American Studies 

type uniform - naf
type uniform - sanb

type abbrevriated - dnlm
type abbreviated - hlasja


---------------------------------

function process_ri_group() {

var t = new String("");
var temp = new String("");
var s = new String(parent.U.document.U2.mods_ri_group.value);
if ( s.length ==0 ) { return; }

var M = new Array();
    M = s.split("<mods:");
var Mmsg = new String("Mmsg:");
var C = new Array();
var Cmsg = new String("Cmsg:");
var w = new String("");

for (i=1;i<M.length;i++ ){
        M[i]="<mods:"+M[i];
        Mmsg += "\n M["+i+"]="+M[i];
                //======C[0] display label
                        C[0] = getDisplayLabel(M[i]);
                        if (C[0].length == 0) C[0]="empty_string";
                //======C[1] type
                        C[1] = getType(M[i]);
                        if (C[1].length == 0) C[1]="empty_string";
                //======C[2] URL
                        C[2] = getURL(M[i]);
                        if (C[2].length == 0) C[2]="empty_string";
                //======C[3] end block
                        C[3] = "END_ID_BLOCK_0"+i;

                for(b=0;b<C.length;b++) {
                        Cmsg += "\nC["+b+"]= "+C[b];
                        w+= parent.U.split_token + C[b];
                        }
}//end for i
//alert(Mmsg+"\n------------------------------------------------------\n"+Cmsg
 //       +"\n\n------------------------------------------------------\n"+w);

w = w.substring(parent.U.split_token.length);
parent.U.document.UF.ri_block_list.value = w;

}//end function process_ri_group


