<html>
<head>
<script language=javascript src="links/vv_functions_links.js"></script>
<title>
char_check
</title>
<link href="vv_workbook.css" type="text/css" rel="stylesheet">
</head>
<!-- body  class="bg_aabbcc" -->
<body bgcolor="aabbcc">
<font face="arial" size="3">
<center><font face="arial">
<script>//document.write(dlxs_vv_header);</script>
<p>
</center>
<table  class="bgINNER"  border="0" cellpadding="2" cellspacing="1" width="98%" xbgcolor="99aabb">
<tr class="greenrow"><td colspan="3" >&nbsp;</td></tr>
<tr class="bgstandardwhite" ><td colspan="3" align="left" class="step">
<pre>
step_005d2.htm
Image class setup

================================
See step_005a2.htm for SUMMARY.
================================


The target files for idb are in........... /d1/dlxs/prep/v/vvz/
[root@diglib2 d1]# ls /d1/dlxs/prep/v/vvz
ic.vvz.norm.sgm  ic.vvz.unnorm.sgm

See 5c files for prep dir for details.

The program files to do the process are in........ /d1/dlxs/bin/i/image/
Relevant files in this directory are:
idb
imageprep.cfg
imageprep
setupcollindex

The index files for imageprep are in.......... /d1/dlxs/idx/v/vvz
input:  /d1/dlxs/idx/v/vvz/large/*
        /d1/dlxs/idx/v/vvz/thumb/*
output: /d1/dlxs/idx/v/vvz/index/*


============================================================================
idb - normalizes the ic.vvz.unnorm.sgm file
1. command> cp ic.vvz.unnorm.sgm to /d1/dlxs/prep/v/vvz
2. command> rm /d1/dlxs/prep/v/vvz/ic.vvz.norm.sgm (this will be replaced by running idb)
3. command> /d1/dlxs/bin/i/image/idb norm vvz

	input:  /d1/dlxs/prep/v/vvz/ic.vvz.unnorm.sgm <a href="xfiles/00_vvz/ic.vvz.unnorm.sgm_veryshort.txt" target="_blank">view short version of ic.vvz.unnorm.sgm</a>
	output: /d1/dlxs/prep/v/vvz/ic.vvz.norm.sgm <a href="xfiles/00_vvz/ic.vvz.norm.sgm_veryshort.txt" target="_blank">view short version of ic.vvz.norm.sgm</a>
	<a href="xfiles/00_vvz/d1_dlxs_prep_v_vvz_files.txt" target="_blank">view file listings for idb input and output</a>

imageprep - populate the directory /d1/dlxs/img/v/vvz/index/ for cgi
4. command> /d1/dlxs/bin/i/image/imageprep vvz

	input:   /d1/dlxs/idx/v/vvz/large
       		 /d1/dlxs/idx/v/vvz/thumb
	output:  /d1/dlxs/idx/v/vvz/index
	<a href="xfiles/00_vvz/imageprep_output.txt" target="_blank">short stdout for imageprep with debug turned on</a>
	<a href="xfiles/00_vvz/imageprep_file_output.txt" target="_blank">files created by imageprep</a>
	<a href="xfiles/00_vvz/d1_dlxs_img_v_vvz_files.txt" target="_blank">view file listings for imageprep input and output</a>

setupcollindex
5. command> rm /d1/dlxs/idx/v/vvz/*
6. command> rmdir /d1/dlxs/idx/v/vvz (this will be replaced by running setupcollindex)
7. command> /d1/dlxs/bin/i/image/setupcollindex v/vvz
8. command> cd /d1/dlxs/idx/v/vvz  (because you have to be in Makefile dir to run it )
9. command> make all
<a href="xfiles/00_vvz/setupcollindex_screen_capture.txt" target="_blank">view screen capture of steps 5 through 9</a>
==========================================================================

To populate the index directory for cgi, run the command below,
where vvz stands for the type/class designator.

/d1/dlxs/bin/i/image/imageprep vvz

To create the normalized version of ic.vvz.unnorm.sgm, run idb
idb is UMICH file to do idb things - normalize the unnormal ic.vvz.unnorm.sgm

/d1/dlxs/bin/i/image/idb norm vvz

Then you have to get rid of the existing 
/d1/dlxs/idx/v/vvz directory
rmdir /d1/dlxs/idx/v/vvz

Then you can run setupcollindex (UMICH program)
setupcollindex v/vvz > nameYourRedirect.txt

Then go to the new vvz directory that you made with the setupcollindex command.
The new vvz directory you just made contains 5 files.
After you run >> make all, the vvz directory contains 8 files.

BEFORE [root@diglib2 vvz]# ls
image.blank.dd  image.cfg  image.inp  Makefile  tags.txt

[root@diglib2 vvz]# make all

echo "working..."
working...
rm -f ./image.ffc
rm -f ./image.ffi
rm -f ./image.ffw
rm -f ./image.idx
rm -f ./image.maps.*
rm -f ./image.mfs
rm -f ./image*.rgn
rm -f ./image.str
rm -f ./image.dd
rm -f ../../../obj/v/vvz/image.sgm
cat ../../../obj/v/vvz/ic.*.norm.sgm > ../../../obj/v/vvz/image.sgm
cp ./image.blank.dd ./image.dd
xpatbld -D ./image.dd
multirgn -f -D ./image.dd -t ./tags.txt

AFTER[root@diglib2 vvz]# ls
image.blank.dd  image.cfg  image.dd  image.idx  image.inp  image.rgn  Makefile  tags.txt

Now you are ready for imageclass release to production.

<a href="http://diglib2.lib.utk.edu/cgi/c/collmgr/collmgr?type=%24TYPE&class=image&submit=release" target = "_blank">http://diglib2.lib.utk.edu/cgi/c/collmgr/collmgr?type=%24TYPE&class=image&submit=release</a>
<!--- uname: dlxsadm - pword: eva39 --->
go to browser for vvz singles and see if your files are there.
<a href="http://diglib2.lib.utk.edu/cgi/i/image/image-idx?c=vvz" target="_blank">http://diglib2.lib.utk.edu/cgi/i/image/image-idx?c=vvz</a>

<!---
go to browser vvi multiples and see if your files are there.
<a href="http://diglib2.lib.utk.edu/cgi/i/image/image-idx?c=vvi" target="_blank">http://diglib2.lib.utk.edu/cgi/i/image/image-idx?c=vvi</a>
-->



===============================================================
===============================================================
===============================================================

================
[root@diglib2 vvz]# pwd
/d1/dlxs/idx/v/vvz
[root@diglib2 vvz]# ls
image.blank.dd  image.cfg  image.dd  image.idx  image.inp  image.rgn  Makefile  tags.txt
[root@diglib2 vvz]# 

=================explain this=============================




VIII. (if you are re-indexing, remove idx/c/coll and its contents.)
       run bin/i/image/setupcollindex c/collid   (collid is as above, directory
       containing it must be named by its first letter)
      
IX.  go to the idx/c/collid directory (whatever that might be);
     correct makefile and do: "make all"

X.  add collection to /d1/dlxs/cgi/i/image/AUTHZD_COLL

XI. add collection to /etc/httpd/conf/httpd.conf under PUBLIC_COLL
    <Directory "/d1/dlxs/cgi/i/image">
      SetEnv AUTHZD_COLL ":"
      SetEnv PUBLIC_COLL ":sampleic:workshopic:utkgsm:"
    </Directory>

XII. run /etc/init.d/httpd restart

XIII. go to Collmgr and create the collection;  make a release to production
     make sure host is "localhost" and dd is filename of correct dd (no path)
     Entrydivsdefault can only have one entry:  full image, description, 
     or other views;
     the order needs to be just like that in the fields where you use more.
     Make the fields match the others before experimenting, including which
     dd file you use.  Try image.dd first.

XIV.  go to Collmgr and manage groups;  edit collection "all";  add this
      collection to "all"; release to production

XV. go to cgi/i/image and run makeCollectionmaps-idx (every time you update
      the collection on collmgr also)

==========================================================

[root@diglib2 ]# cd /d1/dlxs/bin/i/image
[root@diglib2 image]# ls
A.txt                           idb             imageprep.cfg       tab2html.pl
clean.newlines.inplace.pl       idb.20070327jd  localimageprep.cfg
firestar_xpat_images_steps.txt  idb.bak         makefieldbrowse.pl
getoneline.pl                   idb.bk          old
html2tab.pl                     imageprep       setupcollindex

imageprep vvz > A.txt

imageprep is UMICH file to do imageprep things, bad characters break it and
	 	you have to go back to singles and take care of problems.

idb norm vvz
idb	 is UMICH file to do idb things - normalize the unnormal ic.vvz.unnorm.sgm

Then you have to get rid of the existing 
/d1/dlxs/idx/v/vvi directory
rmdir vvi

Then you can run setupcollindex (UMICH program)
setupcollindex v/vvi > nameYourRedirect.txt

Then go to the new vvi directory you just made

[root@diglib2 vvi]# pwd
/d1/dlxs/idx/v/vvi
[root@diglib2 vvi]# ls
image.blank.dd  image.cfg  image.dd  image.idx  image.inp  image.rgn  Makefile  tags.txt

and run >> make all

Then do imageclass release to production

http://diglib2.lib.utk.edu/cgi/c/collmgr/collmgr?type=%24TYPE&class=image&submit=release

go to browser vvi multiples
http://diglib2.lib.utk.edu/cgi/i/image/image-idx?c=vvi and see if your files are there

browser for vvz singles
http://diglib2.lib.utk.edu/cgi/i/image/image-idx?c=vvz;page=index;sid=62d234aadea2e9f26dbc8c96047124e9;g=vvv




  ***In the case that a digital object item is changed from
	one class to another, there have to be corresponding changes in purls
	1.  There is one link file for each class.
		vvz-00 /d1/workarea/dlxs/image/tel/singles/linkfile
		vvi-01 /d1/workarea/dlxs/image/tel/multiples/linkfile
		vvt-03, vvo-02, vvb04, /d1/workarea/dlxs/text/tel/linkfile
 
	2. When a digital object goes from one class to another, you have to
		a. Find original persistant id in the first link file - 
		b. copy this to the new appropriate link file
		c. need to go to locServe database on diglib and change the link by hand
		d. locServe has redirects in it for purls create correct url

	3. Examine the persistant id in weblink= at top of search/*.xml file

	c. modsICsearchOai inserts new purl into locserv database


   When you run modsICsearchOai >checkme
   this creates 
	ic/*
	modsbib/*
	newmods/*
	search/*


b.  fixSubjects - this process now done at /d1/workarea/dlxs/bib/mods/vv
	# fixSubjects
	# repairs the MODS and the modsbib (not the search)
	# so that each subject is contained in its own &lt;subject auth= tag.
	# also, for LCSH ones, splits them out on the "--" value.
	# if the  value contains "century" or numbers (dashes?), label it temporal
	# if the value contains only "Tennessee" or "United States" and spaces,
	#    label it geographic
	# otherwise, the first value keeps its current tag, and all following 
	# values (that don't meet those specs) get labeled topic, and stay within the
	# same subject tag.

c. hexmess - use only if software breaks when you normalize
	#hexmess
	#hexdumps files and checks the hexdump for bad characters.
	# outputs list of characters that must be removed or replaced.
	# use to test OCR files in particular

<!---------------------------------
other things to do, including special handling for special collectios
this came from the "dothis" file in /d1/workarea/dlxs/image/tel/singles


separate out the newmods from institution 0012 and put in spc directory.
/bin/mv newmods/0012* spc/mods/.

for bib class:
/bin/mv  modsbib/0012* spc/modsbib/.
/bin/cp modsbib/* /d1/workarea/dlxs/bib/mods/vv/xml


for search:
/bin/cp search/0012* spc/modssearch/.
/bin/cp search/* /d1/workarea/dlxs/bib/search/vv/xml/

You will go there to put all the search and mods files from different directories up.
scp minithumbs/* diglib@diglib.lib.utk.edu:/d1/dlxs/web/thumbs/vv/.
(need these for search display)

run fixSubjects

(more about fixSubjects in MODS dir where we will be making preservation versions)

do NOT run infotrack on these yet, as we need to relate them to their EADs,
and alter them for crosslinking.

hopefully you have all new dlc files in one directory alone.
point infotrack at this directory and run it, to put info on files into
InfoTrack database.  then copy new stuff to store1.
-->


</pre>
</font>
</td></tr>
<tr class="greenrow"><td colspan="3" >&nbsp;</td></tr>

</table>


