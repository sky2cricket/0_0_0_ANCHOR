<!--
    This code is issued under the GNU General Public License, 
    version 3, 29 June 2007.

    The DLC-MODS Workbook provides a series of web pages to help you 
    generate a MODS metadata record that follows the Digital Library 
    Federation Implementation Guidelines for Shareable MODS Records, 
    as described in the DLF Aquifer Guidlines November 2006.  These 
    Guidelines and the specific MODS Profile are documented on the 
    MODS Profile Page of the DLC-MODS Workbook.

    Copyright (C) 2007 
    Christine Haygood Deane 
    University of Tennessee Libraries
    Digital Library Center
 

    This program is free software: you can redistribute it and/or modify    
    it under the terms of the GNU General Public License as published by    
    the Free Software Foundation, version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/
-->

<html>
<head>
<title>
location
</title>
<link href="vv_workbook.css" type="text/css" rel="stylesheet">
<script>
var split_token=parent.U.split_token;
parent.L.thisDocument = parent.D.document;


function addOneLocationUrlBlock() {
//alert("addOneLocationUrlBlock");
if (!confirm("You have chosen to add one Location Url Block.\n\nDo you wish to continue?")){return;}
buildModsTags(11);
var N = new Number( parent.U.document.UF.numLocationUrlBlocks.value);
N=N+1;
parent.U.document.UF.numLocationUrlBlocks.value = N;
parent.U.document.UF.VVcomment_02d.value = "<!-- NUMBER_OF_LOCATION_URL_BLOCKS: "+N+": -->";
parent.D.location.replace("page_016_location.htm");
}//end function


function subtractOneLocationUrlBlock() {
//alert("subtractOneLocationUrlBlock");
var N = new Number( parent.U.document.UF.numLocationUrlBlocks.value);
if (N==1) {
        alert("Location URL # 1 is required and may not be removed.");
        return;
        }
if (!confirm("You have chosen to remove one Location Url Block.\n\nDo you wish to continue?")){return;}
N=N-1;
parent.U.document.UF.numLocationUrlBlocks.value = N;
parent.U.document.UF.VVcomment_02d.value = "<!-- NUMBER_OF_LOCATION_URL_BLOCKS: "+N+": -->";
parent.D.location.replace("page_016_location.htm");
}//end function




</script>


</head>

<script> document.write('<body onload="load_DF_form();"  bgcolor="'+parent.adb_background_color+'" >'); </script>


<font face="arial" size="3">
<center><font face="arial">
<h2><script> document.write(parent.adb_project_name); </script>
&lt;location></h2>
</center>

<form name="DF"  action="">

<table class="bgINNER"  border="0" cellpadding="2" cellspacing="1" width="98%" xbgcolor="ddeeff">
<tr class="bgstandard"><td colspan="3">
Required Fields have yellow-highlighted input box. 
</td></tr>
<tr class="greenrow">
<td><font face="arial" size="3" color="ffffff" ><b>MODS LABEL</td>
<td><font face="arial" size="3" color="ffffff" ><b>VALUE</td>
<td><font face="arial" size="3" color="ffffff" >&nbsp;</td>
</tr>
<font face="arial">


<!-- sentiinel_00.value = number of elements in a location_block
     sentinel_00.name signals that the set(s) of location_block elements starts with next element -->
<input type="hidden" name="sentinel_00" value="2">

<tr class="bgstandard">
<td class="label13nou">Internet Location</td><td>&nbsp</td><td>&nbsp</td>
</tr>

<tr class="greenrow"><td colspan="5" height="08"></td></tr> 

<script>
//The Number of Location Urls (numLocationUrlBlocks) is set to 1 on the Begin Page, then imcremented/decremented here

var input_bgcolor = new String("");
var url_label = new String("");
var numLU = parent.U.document.UF.numLocationUrlBlocks.value;

var str_lu_block_list = new String(parent.U.document.forms[0].lu_block_list.value);

var alu_block = new Array();
    alu_block = str_lu_block_list.split("split_token");

var jj=0;//display
for(j=0;j<numLU; j++) {
if (j==0){
	input_bgcolor="#ffffaa";
	url_label =" (Primary Display)";
}else{
	input_bgcolor="#ffffff";
	url_label ="";
}
jj=j+1;//display
document.write(
 '<tr class="bgstandard">\r\n<td class="label13nou"> URL #'+jj+url_label+' </td>\r\n'
+'<td>&nbsp;\r\n'
+'<select name="dyn_access_0'+j+'" size="1">\r\n'
+'<option value="_zero">none</option>\r\n'
+'<option value="preview">preview</option>\r\n'
+'<option value="raw object">raw object</option>\r\n'
+'<option value="object in context">object in context</option>\r\n'
+'</select>&nbsp;&nbsp;&nbsp;\r\n'
+'<input type="text" name="dyn_location_url_0'+j+'" value="" size="36" \r\n'
+'onmousedown="return parent.L.stopCutAndPaste(this,event)" \r\n'
+'onkeypress="return parent.L.stopCutAndPaste(this,event)" \r\n'
+'onkeydown="return parent.L.stopCutAndPaste(this,event)" \r\n'
+'style="font-face:arial; font-weight:bold; font-size:12px; color:#000080; width:300px; background:'+input_bgcolor+'" > \r\n'
+'&nbsp;&nbsp;<font face="arial" size="1">Display URL.  Access is recommended.\r\n'
+'<br>&nbsp;&nbsp; access (recommended)\r\n'
+'&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;\r\n'
+'URL (should be a persistent URL including http://)\r\n'
+'</td> <td>&nbsp</td> </tr>\r\n'
+'<tr class="greenrow"><td colspan="5" height="08"></td></tr> \r\n'
);
}//end for;
</script>

<tr class="bgstandard">
<td>&nbsp</td><td colspan="3">&nbsp</td><td>&nbsp</td>
</tr>

<!-- sentiinel_01.value = number of elements in a location_block
     sentinel_01.name signals that the set(s) of location_block elements ends here -->
<input type="hidden" name="sentinel_01" value="0">
<input type="hidden" name="lu_block_list" value="">
<tr class="bgstandard">
<td class="label13u">Add or Remove<br>One Location Url</td><td colspan="3">&nbsp;
<input type="button" name="AddOneLUBlock" 
value="Add One Location Url" class="buttonnw" onClick="addOneLocationUrlBlock();">
<input type="button" name="SubtractOneLUBlock" 
value="Remove One Location Url" class="buttonnw" onClick="subtractOneLocationUrlBlock();">

</td><td>&nbsp;</td>
</tr>

<tr class="bgstandard">
<td>&nbsp</td><td>&nbsp</td><td>&nbsp</td>
</tr>



<tr class="greenrow"><td colspan="3" >&nbsp;</td></tr>






<tr class="bgstandard"><td colspan="3" align="center">
&nbsp;&nbsp;
<!--
<input type="button" name="B_UF" value="Save" class="buttonnw" onclick="buildModsTags(10);">
-->
<!---input type="button" name="B_DF" value="Reset"  class="buttonnw" onclick="load_DF_form();"--->

<input type="button" name="B2" 
value="Save Data and View MODS TAGS" class="buttonnw"
onclick="buildModsTags(1)">


</td></tr>

<tr class="bgstandard" >
<td>&nbsp</td><td>&nbsp</td><td>&nbsp</td>
</tr>
</table>







</form name="forms[0]">

<center><font face="arial">
<h2><script> document.write(parent.adb_project_name); </script></h2>
</center>


<script>


function load_UF_form() {
///URL # 1 has attribute usage="primary display"
///URL #2 and higher have no usage attribute
parent.U.document.UF.lu_block_list.value = document.DF.lu_block_list.value;
return;
}


function load_DF_form() {

///URL # 1 has attribute usage="primary display"
///URL #2 and higher have no usage attribute
document.DF.lu_block_list.value = parent.U.document.UF.lu_block_list.value;

if (parent.U.document.UF.lu_block_list.value == "" ) {
        return;
        }

var split_token=parent.U.split_token;

var str_lu_block = new String(parent.U.document.UF.lu_block_list.value);
var Alu = new Array();
    Alu = str_lu_block.split(split_token);

//for (i=0;i<Alu.length;i++){
 //       alert("page_016_location: Alu["+i+"]="+Alu[i]);
  //      }

//if (!confirm("Continue?")){return;}
var numLU = new Number(parent.U.document.UF.numLocationUrlBlocks.value);
var m=0; //counter for Alu[m] array
var mm = 0 ; //counter for lu_blocks
for(i=0;i<document.DF.length;i++)
{
var sbox = document.DF.elements[i];
//alert("document.DF.elements["+i+"].name="+sbox.name+"\ndocuments.DF.elements["+i+"].value="+sbox.value);
if ( sbox.name.indexOf("dyn_acc") == 0 ) {
                if (Alu[m] == "empty_string"|| Alu[m] == "" ) {
                                sbox.value ="none";
                                m++;
                }else{
                        sbox.value = Alu[m++];
                }

                //alert("document.DF.elements["+i+"].name="+sbox.name+"\ndocuments.DF.elements["+i+"].value="+sbox.value);
        }
if ( sbox.name.indexOf("dyn_loc") == 0 ) {
                if (Alu[m] == "empty_string"|| Alu[m] == "" ) {
                                sbox.value ="";
                                m++;
                }else{
                        sbox.value = Alu[m++];
                }

                //alert("document.DF.elements["+i+"].name="+sbox.name+"\ndocuments.DF.elements["+i+"].value="+sbox.value);
        }
	if (m == Alu.length) {break;}

}//end for




return;

}//end function load_DF_form() 


function buildModsTags(N) {

var split_token=parent.U.split_token;

var luAll = new String("");
var s = new String("");
var temp = new String("");
var count_lu_block = 0;
for(i=0;i<document.DF.length;i++) {
	s = document.DF.elements[i].name;

	if ( s.indexOf("dyn_") == 0 ) {
        	temp = document.DF.elements[i].value;
		alert("document.DF.elements["+i+"].name="+document.DF.elements[i].name
		     +"\ndocument.DF.elements["+i+"].value="+document.DF.elements[i].value);
        	if ( temp == "") { temp = "empty_string"; }
        	luAll += split_token + temp;
        	}
}

luAll = luAll.substring(split_token.length);

//load hidden values
document.DF.lu_block_list.value = luAll;

////do this first so current values are loaded regardless of validation status
load_UF_form();

var num = new Number();
    num = N;

if (num == 11) {return;} //no validation required.

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////
//before writing MODS TAGS, make sure all required fields are populated
//checkAllRequired... true  validation sets validation status to M  -- complete
//checkAllRequired... false validation sets validation status to m  -- incomplete

if (!parent.L.checkAllRequiredElements_Page_location() ) {
	parent.L.update_page_validation('location','m');
	return;
}
parent.L.update_page_validation('location','M');

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

if (num == 10) {
        alert("Values have been saved.");
        return;
        }


var aps= new Array();
var aps= new Array();
var hps= new Array();
var cps= new Array();
    
    hps = parent.L.buildTagsArray_header(num);
    aps = parent.L.buildTagsArray_location(num);
    cps = parent.L.buildTagsArray_closer(num);


//=================================================

document.write('<input type="button" name="BBACK" onclick="javascript: history.back()" value="BACK"><P>');
document.write('<font face="Elephant" size="3" color="a00000">'+parent.adb_project_name+' &lt;location><p></font>');
//PRELIMINARY COPY FOR DEMONSTRATION PURPOSES ONLY</font><p>'
document.write( "This is the generated xml script.  Values you entered are highlighted in red.<HR>");

//document.write('< ? xml version="1.0"  ? > \r\n'); 
///document.write("Content-Type: text/xml ")



for (i=0;i<hps.length;i++) {
	var vps = new String(hps[i]);
 	document.write("<br>"+vps);
	}



for (i=0;i<aps.length;i++) {
	var vps = new String(aps[i]);
	document.write("<br>"+vps);
	}



for (i=0;i<cps.length;i++) {
	var vps = new String(cps[i]);
	document.write("<br>"+vps);

	}



}//end function

</script>
	
<script language=javascript src="fdg.js"></script>
<script>fdg();</script>


</body>
</html>

