<!--
    This code is issued under the GNU General Public License, 
    version 3, 29 June 2007.

    The DLC-MODS Workbook provides a series of web pages to help you 
    generate a MODS metadata record that follows the Digital Library 
    Federation Implementation Guidelines for Shareable MODS Records, 
    as described in the DLF Aquifer Guidlines November 2006.  These 
    Guidelines and the specific MODS Profile are documented on the 
    MODS Profile Page of the DLC-MODS Workbook.

    Copyright (C) 2007 
    Christine Haygood Deane 
    University of Tennessee Libraries
    Digital Library Center
 

    This program is free software: you can redistribute it and/or modify    
    it under the terms of the GNU General Public License as published by    
    the Free Software Foundation, version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/
-->

<html>
<head>
<title>
relatedItem
</title>
<link href="vv_workbook.css" type="text/css" rel="stylesheet">

<script>
var split_token=parent.U.split_token;
parent.L.thisDocument = parent.D.document;


function addOneRelatedItemBlock() {
if (!confirm("You have chosen to add one Related Item Block.\n\nDo you wish to continue?")){return;} 
buildModsTags(11);
parent.L.update_block_iteration("relatedItem","1");
parent.D.location.replace("page_014_relatedItem.htm");
}//end function


function subtractOneRelatedItemBlock() {
if ( parent.L.get_block_iteration("relatedItem") == 1) {
	alert("Related Item Block #1 may not be removed.");
	return;
	}
if (!confirm("You have chosen to remove one Related Item Block.\n\nDo you wish to continue?")){return;} 
parent.L.update_block_iteration("relatedItem","-1");
parent.D.location.replace("page_014_relatedItem.htm");
}//end function

function clearPage() { 
        if (!confirm("All data entered for this page will be cleared.\n\nDo you wish to continue?")) {return};
        parent.U.document.UF.ri_block_list.value = "";
        parent.L.update_block_iteration("relatedItem","0");
        parent.L.update_page_validation('relatedItem','k');
        parent.D.location.replace("page_014_relatedItem.htm");
        return;
}//end function




</script>

</head>

<script>document.write('<body onload="load_DF_form();"  bgcolor="'+parent.adb_background_color+'" >');</script>

<font face="arial" size="3">
<center><font face="arial">
<h3><script> document.write(parent.adb_project_name); </script>
&lt;relatedItem></h3>
</center>

<form name="DF"  action="new.xml" onload="load_DF_form()"  >

<table class="bgINNER"  border="0" cellpadding="2" cellspacing="1" width="98%" xbgcolor="ddeeff">
<tr class="bgstandard"><td colspan="5">
Required Fields have yellow-highlighted input box. 
</td></tr>
<tr class="greenrow">
<td><font face="arial" size="3" color="ffffff" ><b>MODS LABEL</td>
<td colspan="4"><font face="arial" size="3" color="ffffff" ><b>VALUE</td>
</tr>
<tr class="bgstandard">
<td colspan="4" class="label12u">
The only type of Related Item supported is a Link to a related item's metadata record.</font></td><td>&nbsp</td>
</tr>

<!-- sentiinel_00.value = number of elements in a relatedItem_block
     sentinel_00.name signals that the set(s) of relatedItem_block elements starts with next element -->
<input type="hidden" name="sentinel_00" value="0">
<script>

//The Number of Related Items is set to 1 on the Begin Page, then incremented/decremented here
//This number is in the Block Iteration string.

var numRI = new Number(parent.L.get_block_iteration("relatedItem"));

var str_ri_block_list = new String(parent.U.document.forms[0].ri_block_list.value);

var ari_block = new Array();
    ari_block = str_ri_block_list.split("split_token");

var jj=0;
for(j=0;j<numRI; j++) {

jj=j+1;

document.write('<tr class="bgstandard"> \r\n'
+'<td class="label12u" width="15%"> \r\n'
+'Related Item # '+jj+'</td> \r\n'
+'<td class="value12u" width="25%">&nbsp;<input type="text" name="dyn_itemDisplayLabel_0'+j+'" size="20" value="" style="color:#000080; font-weight:bold">'
+'<br><font face="arial" size="1">&nbsp;Display Label (optional)</font></td>'
+'<td class="value12u" width="15%">&nbsp;'
+'<select name="dyn_itemType_0'+j+'" size="1" style="color:#000080; font-weight:bold">'
+'<option value="_zero" selected>none</option>'
+'<option value="constituent">constituent</option>'
+'<option value="host">host</option>'
+'<option value="isReferencedBy">isReferencedBy</option>'
+'<option value="original">original</option>'
+'<option value="otherFormat">otherFormat</option>'
+'<option value="otherVersion">otherVersion</option>'
+'<option value="preceeding">preceeding</option>'
+'<option value="series">series</option>'
+'<option value="succeeding">succeeding</option>'
+'</select>'
+'<br><font face="arial" size="1">&nbsp;Type (optional)</font></td>'
+'<td class="value12u" colspan="2">&nbsp;<input type="text" name="dyn_itemURL_0'+j+'" value="" size="72"  \r\n'
+'class="required300w"  >  \r\n'
+'<br><font face="arial" size="1">&nbsp;URL (required) Must be a valid URL starting with <u>http://</u></font></td>'
+'<input type="hidden" name="dyn_itemEND_RI_BLOCK_0'+j+'" value="END_RI_BLOCK_0'+j+'">'
+'</td> \r\n'
//+'<td>&nbsp</td> \r\n'
+'</tr> \r\n'
+'<tr class="greenrow"><td colspan="5" height="08"></td></tr>\r\n' 
);




}//end for loop


</script>
<!-- sentiinel_00.value = number of elements in an identifier_block
     sentinel_00.name signals that the set(s) of identifier_block elements starts with next element -->
<input type="hidden" name="sentinel_01" value="4">

<input type="hidden" name="ri_block_list" value="">

<tr class="bgstandard">
<td>&nbsp</td><td colspan="3">&nbsp</td><td>&nbsp</td>
</tr>

<tr class="bgstandard">
<td class="label13u">Add or Remove<br>One Related Item</td><td colspan="3">&nbsp;
<input type="button" name="AddOneRIBlock" 
value="Add One Related Item" class="buttonnw" onClick="addOneRelatedItemBlock();">
<input type="button" name="SubtractOneRIBlock" 
value="Remove One Related Item" class="buttonnw" onClick="subtractOneRelatedItemBlock();">

</td><td>&nbsp;</td>
</tr>


<tr class="greenrow"><td colspan="5" >&nbsp;</td></tr>




<tr class="bgstandard"><td colspan="5" align="center">
&nbsp;&nbsp;


<input type="button" name="B2" value="Save Data and View MODS TAGS" class="buttonnw" onclick="buildModsTags(1)">

&nbsp;&nbsp;
<input type="button" name="Bclear" value="Clear Data and Restart this Page" class="buttonnw" onclick="clearPage();">




</td></tr>
<tr class="bgstandard" >
<td>&nbsp</td><td colspan="3">&nbsp</td><td>&nbsp</td>
</tr>

</table>



</form name="forms[0]">

<center><font face="arial">
<h3>
<script> document.write(parent.adb_project_name); </script>
</h3>
</center>


<script>


function load_UF_form() {
//alert("load_UF_form");

parent.U.document.forms[0].ri_block_list.value = document.DF.ri_block_list.value;

return;
}



function load_DF_form() {//page 05 gets info from page_upper

var N = new Number( parent.L.get_block_iteration("relatedItem"));
//alert("relatedItem iterations: "+N);
parent.L.populate_DF_webform_from_UF_blocklist("ri_block_list","dyn_");

if (parent.U.document.UF.ri_block_list.value == "" ) {
	return;
	}

return;
}


function buildModsTags(N) {

document.DF.ri_block_list.value = parent.L.populate_DF_blocklist_from_DF_webform("ri_block_list");
//alert("document.DF.ri_block_list.value=\n"+document.DF.ri_block_list.vaue);
//alert("parent.U.document.UF.ri_block_list.value=\n"+parent.U.document.UF.ri_block_list.vaue);

////do this first so current values are loaded regardless of validation status
load_UF_form();

var num = new Number();
    num = N;

if (num == 11) {return;} //no validation required.

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////
//before writing MODS TAGS, make sure all required fields are populated
//checkAllRequired... true  validation sets validation status to K  -- complete
//checkAllRequired... false validation sets validation status to k  -- incomplete

if (!parent.L.checkAllRequiredElements_relatedItem() ) {
	parent.L.update_page_validation('relatedItem','k');
	return;
}
parent.L.update_page_validation('relatedItem','K');

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

if (num == 10) {
        alert("Values have been saved.");
        return;
        }



var abreak = new String("");
if (num != "0" && num!=10 ) {
	abreak = "<BR>";
	}

load_UF_form();

var aps= new Array();
var hps= new Array();
var cps= new Array();
    
    hps = parent.L.buildTagsArray_header(num);
    aps = parent.L.buildTagsArray_relatedItem(num);
    cps = parent.L.buildTagsArray_closer(num);

//=================================================

document.write('<input type="button" name="BBACK" onclick="javascript: history.back()" value="BACK"><P>');
document.write('<font face="Elephant" size="3" color="a00000">'+parent.adb_project_name+' &lt;relatedItem><p></font>');
//PRELIMINARY COPY FOR DEMONSTRATION PURPOSES ONLY</font><p>'
//document.write('<font face="Elephant" size="3" color="a00000">PRELIMINARY COPY FOR DEMONSTRATION PURPOSES ONLY</font><p>'
document.write(parent.adb_workbook_version+'<p>'
		+"This is the generated xml script.  Values you entered are highlighted in red."
		+"<HR>");
//document.write( "This is the generated xml script.  Values you entered are highlighted in red.<HR>");

///document.write('< ? xml version="1.0"  ? > \r\n'); 
///document.write("Content-Type: text/xml ")



for (i=0;i<hps.length;i++) {
	var vps = new String(hps[i]);
 	document.write(abreak+vps);
	}



for (i=0;i<aps.length;i++) {
	var vps = new String(aps[i]);
	document.write(abreak+vps);
	}



for (i=0;i<cps.length;i++) {
	var vps = new String(cps[i]);
	document.write(abreak+vps);
	}


}//end function


</script>
	
<script language=javascript src="elements.js"></script>
<script>elements();</script>

</body>
</html>
